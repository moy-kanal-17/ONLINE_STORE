<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{{title}}</title>
  <link id="bootstrap-theme" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    body {
      padding: 30px;
      background-color: #121212;
      color: #ffffff;
    }
    h1 {
      margin-bottom: 30px;
      color: #00ff88;
    }
    .navbar {
      background-color: #1e1e1e;
      border-radius: 10px;
      margin-bottom: 30px;
    }
    .navbar-brand, .nav-link {
      color: #00ff88 !important;
    }
    .navbar-brand:hover, .nav-link:hover {
      color: #ffffff !important;
    }
    .table {
      background-color: #1c1c1c;
      color: #ffffff;
      font-size: 1.1rem;
    }
    .table thead {
      background-color: #333;
    }
    .table thead th {
      color: #00ff88;
      font-size: 1.2rem;
      text-align: center;
    }
    .table td, .table th {
      text-align: center;
      vertical-align: middle;
    }
    .btn-lg {
      font-size: 1.2rem;
      padding: 10px 20px;
    }
    .theme-toggle {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 999;
    }
    .section {
      background-color: #1e1e1e;
      padding: 30px;
      border-radius: 15px;
      box-shadow: 0 0 15px rgba(0,0,0,0.4);
      margin-bottom: 40px;
    }
  </style>
</head>
<body>
  <button id="themeToggle" class="btn btn-dark theme-toggle">🌙 Dark Mode</button>

  <nav class="navbar navbar-expand-lg">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">{{title}}</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/seller">Mahsulotlar</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/seller/orders">Buyurtmalar</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/sellers/profile">Profil</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container">
    <h1>{{title}}</h1>

    <div class="section">
      <h2>Mahsulotlar ro'yxati</h2>
      <button class="btn btn-success btn-lg mb-3" data-bs-toggle="modal" data-bs-target="#addProductModal">➕ Yangi mahsulot qo'shish</button>

      <table class="table table-bordered table-hover">
        <thead class="table-dark">
          <tr>
            <th>ID</th>
            <th>Nomi</th>
            <th>Narxi</th>
            <th>Tavsif</th>
            <th>Skidka</th>
            <th>Amallar</th>
          </tr>
        </thead>
        <tbody>
          {{#each products}}
          <tr data-product-id="{{this.id}}">
            <td>{{this.id}}</td>
            <td>{{this.name}}</td>
            <td>{{this.price}}</td>
            <td>{{this.describtion}}</td>
            <td>{{this.skids}}</td>
            <td>
              <a href="#" class="btn btn-primary btn-lg edit-product-btn" data-bs-toggle="modal" data-bs-target="#editProductModal" data-product-id="{{this.id}}">✏ Tahrirlash</a>
              <form action="/seller/foods/delete/{{this.id}}" method="POST" class="d-inline" onsubmit="return confirm('Haqiqatan ham o\'chirmoqchimisiz?')">
                <button type="submit" class="btn btn-danger btn-lg">🗑 O'chirish</button>
              </form>
            </td>
          </tr>
          {{/each}}
        </tbody>
      </table>
    </div>
  </div>

  <!-- Add Product Modal -->
  <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductLabel" aria-hidden="true">
    <div class="modal-dialog">
      <form action="/foods" method="POST" enctype="multipart/form-data" class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addProductLabel">🛒 Yangi mahsulot</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Yopish"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="image" class="form-label">📷 Rasm</label>
            <input type="file" class="form-control" id="image" name="image" accept="image/*" required />
          </div>
          <div class="mb-3">
            <label for="name" class="form-label">🔤 Mahsulot nomi</label>
            <input type="text" class="form-control" id="name" name="name" required />
          </div>
          <div class="mb-3">
            <label for="price" class="form-label">💰 Narxi</label>
            <input type="number" class="form-control" id="price" name="price" step="0.01" required />
          </div>
          <div class="mb-3">
            <label for="describtion" class="form-label">📄 Qisqacha tavsif</label>
            <textarea class="form-control" id="describtion" name="describtion" rows="3"></textarea>
          </div>
          <div class="mb-3">
            <label for="skids" class="form-label">🔥 Skidka (%)</label>
            <input type="number" class="form-control" id="skids" name="skids" step="1" min="0" max="100" value=1 />
          </div>
          <h1>ID:{{sellerId}}</h1>
          <input type="hidden" id="seller_id" name="seller_id" value={{sellerId}} />
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary btn-lg" data-bs-dismiss="modal">❌ Bekor qilish</button>
          <button type="submit" class="btn btn-primary btn-lg">✅ Qo'shish</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Edit Product Modal -->
  <div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductLabel" aria-hidden="true">
    <div class="modal-dialog">
      <form id="editProductForm" action="" method="POST" enctype="multipart/form-data" class="modal-content">
        <input type="hidden" name="id" id="editProductId">
        <input type="hidden" id="edit_seller_id" name="seller_id" value="" />
        <div class="modal-header">
          <h5 class="modal-title" id="editProductLabel">✏ Mahsulotni tahrirlash</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Yopish"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="editImage" class="form-label">📷 Rasm</label>
            <input type="file" class="form-control" id="editImage" name="image" accept="image/*" />
          </div>
          <div class="mb-3">
            <label for="editName" class="form-label">🔤 Mahsulot nomi</label>
            <input type="text" class="form-control" id="editName" name="name" required />
          </div>
          <div class="mb-3">
            <label for="editPrice" class="form-label">💰 Narxi</label>
            <input type="number" class="form-control" id="editPrice" name="price" step="0.01" required />
          </div>
          <div class="mb-3">
            <label for="editDescribtion" class="form-label">📄 Qisqacha tavsif</label>
            <textarea class="form-control" id="editDescribtion" name="describtion" rows="3"></textarea>
          </div>
          <div class="mb-3">
            <label for="editSkids" class="form-label">🔥 Skidka (%)</label>
            <input type="number" class="form-control" id="editSkids" name="skids" step="1" min="0" max="100" />
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary btn-lg" data-bs-dismiss="modal">❌ Bekor qilish</button>
          <button type="submit" class="btn btn-primary btn-lg">💾 Saqlash</button>

            <input type="text" class="form-control" id="editName" name="seller_id" value={{this.sellerId}} />

        </div>
      </form>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Функция для чтения cookie
    function getCookie(name) {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; ${name}=`);
      if (parts.length === 2) return parts.pop().split(';').shift();
      return null;
    }

    // Переключение темы
    const themeToggle = document.getElementById("themeToggle");
    const bootstrapLink = document.getElementById("bootstrap-theme");
    const darkTheme = "https://cdn.jsdelivr.net/npm/bootswatch@5.3.0/dist/darkly/bootstrap.min.css";
    const lightTheme = "https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css";

    const savedTheme = localStorage.getItem("theme");
    if (savedTheme === "dark") {
      bootstrapLink.href = darkTheme;
      themeToggle.textContent = "🌞 Light Mode";
    }

    themeToggle.addEventListener("click", () => {
      const isDark = bootstrapLink.href.includes("darkly");
      if (isDark) {
        bootstrapLink.href = lightTheme;
        themeToggle.textContent = "🌙 Dark Mode";
        localStorage.setItem("theme", "light");
      } else {
        bootstrapLink.href = darkTheme;
        themeToggle.textContent = "🌞 Light Mode";
        localStorage.setItem("theme", "dark");
      }
    });

    // Функция для декодирования JWT
    function parseJwt(token) {
      try {
        const base64Url = token.split('.')[1];
        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        const jsonPayload = decodeURIComponent(
          atob(base64)
            .split('')
            .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))
            .join('')
        );
        return JSON.parse(jsonPayload);
      } catch (e) {
        console.error('Error parsing JWT:', e);
        return null;
      }
    }

    // Заполнение seller_id для обеих форм
    function setSellerId() {
      const token = getCookie('access_token');
      if (!token) {
        console.error('No access_token found in cookies');
        alert('Please log in to add or edit a product!');
        return null;
      }

      const decoded = parseJwt(token);
      const sellerId = decoded?.sub;
      if (!sellerId) {
        console.error('No seller ID found in token');
        alert('Invalid token: Seller ID not found!');
        return null;
      }

      return sellerId;
    }

    // Add Product Modal
    const addProductModalElement = document.getElementById('addProductModal');
    if (addProductModalElement) {
      addProductModalElement.addEventListener('show.bs.modal', () => {
        const sellerId = setSellerId();
        if (sellerId) {
          const sellerIdInput = document.getElementById('seller_id');
          sellerIdInput.value = sellerId;
          console.log('Set add product seller_id:', sellerId);
        }
      });
    }

    // Логирование отправки формы добавления
    const addProductForm = addProductModalElement?.querySelector('form');
    if (addProductForm) {
      addProductForm.addEventListener('submit', event => {
        const formData = new FormData(addProductForm);
        console.log('Add product form data:', Object.fromEntries(formData));
      });
    }

    // Edit Product Modal
    const editProductModalElement = document.getElementById('editProductModal');
    if (editProductModalElement) {
      editProductModalElement.addEventListener('show.bs.modal', event => {
        const button = event.relatedTarget;
        const productId = button.getAttribute('data-product-id');
        console.log('Product ID:', productId);

        if (!productId || isNaN(parseInt(productId))) {
          console.error('Invalid product ID:', productId);
          alert('Некорректный ID продукта!');
          return;
        }

        const sellerId = setSellerId();
        if (sellerId) {
          const sellerIdInput = document.getElementById('edit_seller_id');
          sellerIdInput.value = sellerId;
          console.log('Set edit product seller_id:', sellerId);
        }

        fetch(`/foods/foods/${productId}`, {
          headers: {
            'Authorization': `Bearer ${getCookie('access_token') || ''}`,
          },
        })
          .then(response => {
            if (!response.ok) {
              throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
          })
          .then(product => {
            document.getElementById('editProductId').value = product.id || '';
            document.getElementById('editName').value = product.name || '';
            document.getElementById('editPrice').value = product.price || '';
            document.getElementById('editDescribtion').value = product.describtion || '';
            document.getElementById('editSkids').value = product.skids || '';
            const editProductForm = document.getElementById('editProductForm');
            editProductForm.action = `/foods/foods/${product.id}`;
          })
          .catch(error => {
            console.error('Ошибка загрузки данных:', error);
            alert('Ошибка загрузки данных продукта! Подробности: ' + error.message);
          });
      });
    }

// Логирование отправки формы редактирования
const editProductForm = document.getElementById('editProductForm');
if (editProductForm) {
  editProductForm.addEventListener('submit', event => {
    event.preventDefault();
    const formData = new FormData(editProductForm);
    const productId = document.getElementById('editProductId').value;

    // Логируем данные формы
    const formDataObject = Object.fromEntries(formData);
    console.log('Edit product form data:', formDataObject);

    // Проверяем наличие всех полей
    if (!formDataObject.name || !formDataObject.price || !formDataObject.seller_id)  {
      alert('Заполните обязательные поля: имя, цена, seller_id!');
      return;
    }

    fetch(`foods/update/${productId}`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${getCookie('access_token') || ''}`,
      },
      body: formDataObject,
    })
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        console.log('Product updated:', data);
        alert('Mahsulot muvaffaqiyatli yangilandi!');
        window.location.reload();
      })
      .catch(error => {
        console.error('Ошибка обновления:', error);
        alert('Ошибка обновления продукта! Подробности: ' + error.message);
      });
  });
}
  </script>
</body>
</html>